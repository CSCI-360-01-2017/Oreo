package com.csci360.gui;


import com.csci360.alarmclock.Controller;
import com.csci360.alarmclock.Time;
import java.awt.Color;
import java.io.File;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gabriellecozart
 */
public class OreoAlarmClockJFrame extends javax.swing.JFrame {

    /**
     * Creates new form OreoAlarmClockJFrame
     */
    public OreoAlarmClockJFrame() {
        initComponents();
        Timer timer = new Timer();
        this.controller = Controller.start();
        
        TimerTask task = new TimerTask()
        {
            public void run()
            {
                updateTimeLabel();
            }
        };
        timer.schedule(task, 500, 500);
        this.FrequencyLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FMAMButtonGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ClockPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        HourButton = new javax.swing.JButton();
        MinuteButton = new javax.swing.JButton();
        SnoozeButton = new javax.swing.JButton();
        TimeToggleButton = new javax.swing.JToggleButton();
        Alarm1ToggleButton = new javax.swing.JToggleButton();
        Alarm2ToggleButton = new javax.swing.JToggleButton();
        TimeLabel = new javax.swing.JLabel();
        Alarm1OnOffSwitch = new javax.swing.JToggleButton();
        Alarm2OnOffSwitch = new javax.swing.JToggleButton();
        RadioPanel = new javax.swing.JPanel();
        FrequencyLabel = new javax.swing.JLabel();
        FMButton = new javax.swing.JRadioButton();
        AMButton = new javax.swing.JRadioButton();
        IncrementVolumeButton = new javax.swing.JButton();
        VOLUME_LABEL = new javax.swing.JLabel();
        DecrementVolumeButton = new javax.swing.JButton();
        volumeLabel = new javax.swing.JLabel();
        incrementFequencyButton = new javax.swing.JButton();
        decrementFequencyButton = new javax.swing.JButton();
        playRadioButton = new javax.swing.JToggleButton();

        FMAMButtonGroup.add(AMButton);
        FMAMButtonGroup.add(FMButton);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(new javax.swing.border.MatteBorder(null));

        HourButton.setText("Hour");
        HourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HourButtonActionPerformed(evt);
            }
        });

        MinuteButton.setText("Minute");
        MinuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinuteButtonActionPerformed(evt);
            }
        });

        SnoozeButton.setText("Snooze");
        SnoozeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SnoozeButtonActionPerformed(evt);
            }
        });

        TimeToggleButton.setText("Set Time");
        TimeToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeToggleButtonActionPerformed(evt);
            }
        });

        Alarm1ToggleButton.setText("Set Alarm 1");
        Alarm1ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alarm1ToggleButtonActionPerformed(evt);
            }
        });

        Alarm2ToggleButton.setText("Set Alarm 2");
        Alarm2ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alarm2ToggleButtonActionPerformed(evt);
            }
        });

        TimeLabel.setFont(new java.awt.Font("Lucida Sans", 0, 48)); // NOI18N
        TimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeLabel.setText("12:00 AM");
        TimeLabel.setToolTipText("");

        Alarm1OnOffSwitch.setText("Alarm 1 Off");
        Alarm1OnOffSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alarm1OnOffSwitchActionPerformed(evt);
            }
        });

        Alarm2OnOffSwitch.setText("Alarm 2 Off");
        Alarm2OnOffSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alarm2OnOffSwitchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Alarm1OnOffSwitch)
                        .addGap(138, 138, 138)
                        .addComponent(Alarm2OnOffSwitch))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(Alarm1ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Alarm2ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(TimeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(HourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(MinuteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(SnoozeButton))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HourButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TimeToggleButton)
                    .addComponent(MinuteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SnoozeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Alarm1ToggleButton)
                    .addComponent(Alarm2ToggleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Alarm1OnOffSwitch)
                    .addComponent(Alarm2OnOffSwitch))
                .addGap(33, 33, 33)
                .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout ClockPanelLayout = new javax.swing.GroupLayout(ClockPanel);
        ClockPanel.setLayout(ClockPanelLayout);
        ClockPanelLayout.setHorizontalGroup(
            ClockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ClockPanelLayout.setVerticalGroup(
            ClockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Clock", ClockPanel);

        FrequencyLabel.setFont(new java.awt.Font("Lucida Sans", 0, 48)); // NOI18N
        FrequencyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FrequencyLabel.setText("87.5 FM");
        FrequencyLabel.setToolTipText("");

        FMButton.setText("FM");
        FMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMButtonActionPerformed(evt);
            }
        });

        AMButton.setText("AM");
        AMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AMButtonActionPerformed(evt);
            }
        });

        IncrementVolumeButton.setText(">");
        IncrementVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncrementVolumeButtonActionPerformed(evt);
            }
        });

        VOLUME_LABEL.setText("Volume: ");

        DecrementVolumeButton.setText("<");
        DecrementVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecrementVolumeButtonActionPerformed(evt);
            }
        });

        volumeLabel.setText("5");

        incrementFequencyButton.setText(">");
        incrementFequencyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementFequencyButtonActionPerformed(evt);
            }
        });

        decrementFequencyButton.setText("<");
        decrementFequencyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementFequencyButtonActionPerformed(evt);
            }
        });

        playRadioButton.setText("Turn On Radio");
        playRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RadioPanelLayout = new javax.swing.GroupLayout(RadioPanel);
        RadioPanel.setLayout(RadioPanelLayout);
        RadioPanelLayout.setHorizontalGroup(
            RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RadioPanelLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(playRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RadioPanelLayout.createSequentialGroup()
                .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RadioPanelLayout.createSequentialGroup()
                        .addContainerGap(50, Short.MAX_VALUE)
                        .addComponent(decrementFequencyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FrequencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RadioPanelLayout.createSequentialGroup()
                        .addContainerGap(181, Short.MAX_VALUE)
                        .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RadioPanelLayout.createSequentialGroup()
                                .addComponent(FMButton)
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RadioPanelLayout.createSequentialGroup()
                                .addComponent(DecrementVolumeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(VOLUME_LABEL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AMButton)
                            .addGroup(RadioPanelLayout.createSequentialGroup()
                                .addComponent(volumeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(IncrementVolumeButton)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(incrementFequencyButton)
                .addGap(72, 72, 72))
        );
        RadioPanelLayout.setVerticalGroup(
            RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RadioPanelLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(playRadioButton)
                .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RadioPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(FrequencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RadioPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(incrementFequencyButton))
                    .addGroup(RadioPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(decrementFequencyButton)))
                .addGap(18, 18, 18)
                .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AMButton)
                    .addComponent(FMButton))
                .addGap(39, 39, 39)
                .addGroup(RadioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VOLUME_LABEL)
                    .addComponent(volumeLabel)
                    .addComponent(DecrementVolumeButton)
                    .addComponent(IncrementVolumeButton))
                .addGap(65, 65, 65))
        );

        jTabbedPane1.addTab("Radio", RadioPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Clock");

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Clock tab
    
    private void SnoozeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SnoozeButtonActionPerformed
        // TODO add your handling code here:
        if((this.controller.isAlarmSounding() && this.Alarm1OnOffSwitch.isSelected()))
        {
            this.controller.alarm1Snooze();
            this.controller.setAlarmSounding();
           
        }
        
         if((this.controller.isAlarmSounding() && this.Alarm2OnOffSwitch.isSelected()))
        {
            this.controller.alarm2Snooze();
            this.controller.setAlarmSounding();
           
        }
        
    }//GEN-LAST:event_SnoozeButtonActionPerformed

    private void HourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HourButtonActionPerformed
        // TODO add your handling code here:
        this.controller.userIncrementHour();
        this.updateTimeLabel();
    }//GEN-LAST:event_HourButtonActionPerformed

    private void Alarm1ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alarm1ToggleButtonActionPerformed
        // TODO add your handling code here:
        this.controller.toggleSetAlarm1();
        this.updateTimeLabel();
    }//GEN-LAST:event_Alarm1ToggleButtonActionPerformed

    private void TimeToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeToggleButtonActionPerformed
        // TODO add your handling code here:
        this.controller.toggleSetTime();
    }//GEN-LAST:event_TimeToggleButtonActionPerformed

    private void MinuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinuteButtonActionPerformed
        // TODO add your handling code here:
        this.controller.userIncrementMinute();
        this.updateTimeLabel();
    }//GEN-LAST:event_MinuteButtonActionPerformed

    private void Alarm2ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alarm2ToggleButtonActionPerformed
        // TODO add your handling code here:
        this.controller.toggleSetAlarm2();
        this.updateTimeLabel();
    }//GEN-LAST:event_Alarm2ToggleButtonActionPerformed

    private void Alarm1OnOffSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alarm1OnOffSwitchActionPerformed
        // TODO add your handling code here:
        if(this.Alarm1OnOffSwitch.isSelected())
        {
            this.Alarm1OnOffSwitch.setText("Alarm 1 On");
            this.controller.toggleAlarm1EnabledBoolean();
        }
        else
        {
            this.Alarm1OnOffSwitch.setText("Alarm 1 Off");
            this.controller.toggleAlarm1EnabledBoolean();

        }
    }//GEN-LAST:event_Alarm1OnOffSwitchActionPerformed

    private void Alarm2OnOffSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alarm2OnOffSwitchActionPerformed
        // TODO add your handling code here:
        if(this.Alarm2OnOffSwitch.isSelected())
        {
            this.Alarm2OnOffSwitch.setText("Alarm 2 On");
            this.controller.toggleAlarm2EnabledBoolean();

        }
        else
        {
            this.Alarm2OnOffSwitch.setText("Alarm 2 Off");
            this.controller.toggleAlarm2EnabledBoolean();

        }
    }//GEN-LAST:event_Alarm2OnOffSwitchActionPerformed

    // Radio Tab
    
    private void decrementFequencyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementFequencyButtonActionPerformed
        // TODO add your handling code here:
        if(this.playRadioButton.isSelected())
        {
            this.controller.userDecrementFrequency();
        }
        this.updateFrequencyLabel();
    }//GEN-LAST:event_decrementFequencyButtonActionPerformed

    private void incrementFequencyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementFequencyButtonActionPerformed
        // TODO add your handling code here:
        if(this.playRadioButton.isSelected())
        {
            this.controller.userIncremenetFrequency();
        }
        this.updateFrequencyLabel();
    }//GEN-LAST:event_incrementFequencyButtonActionPerformed

    private void FMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMButtonActionPerformed
        // TODO add your handling code here:  
        this.updateFrequencyLabel();
    }//GEN-LAST:event_FMButtonActionPerformed

    private void AMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AMButtonActionPerformed
        // TODO add your handling code here:
        this.updateFrequencyLabel();
    }//GEN-LAST:event_AMButtonActionPerformed

    private void DecrementVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecrementVolumeButtonActionPerformed
        // TODO add your handling code here:
        this.controller.userDecrementVolume();
        System.out.println(this.controller.getVolumeString());
        this.updateVolumeLabel();
    }//GEN-LAST:event_DecrementVolumeButtonActionPerformed

    private void IncrementVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncrementVolumeButtonActionPerformed
        // TODO add your handling code here:
        this.controller.userIncremenetVolume();
        this.updateVolumeLabel();
    }//GEN-LAST:event_IncrementVolumeButtonActionPerformed

    private void playRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playRadioButtonActionPerformed
        // TODO add your handling code here:
        if(this.playRadioButton.isSelected())
        {
            this.FrequencyLabel.setVisible(true);
            this.playRadioButton.setText("Turn Off Radio");
            //this.controller.toggleAlarm2EnabledBoolean();

        }
        else
        {
            this.FrequencyLabel.setVisible(false);
            this.playRadioButton.setText("Turn On Radio");
            //this.controller.toggleAlarm2EnabledBoolean();

        }
    }//GEN-LAST:event_playRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OreoAlarmClockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OreoAlarmClockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OreoAlarmClockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OreoAlarmClockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
      

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OreoAlarmClockJFrame().setVisible(true);
            }
        });
        
       
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AMButton;
    private javax.swing.JToggleButton Alarm1OnOffSwitch;
    private javax.swing.JToggleButton Alarm1ToggleButton;
    private javax.swing.JToggleButton Alarm2OnOffSwitch;
    private javax.swing.JToggleButton Alarm2ToggleButton;
    private javax.swing.JPanel ClockPanel;
    private javax.swing.JButton DecrementVolumeButton;
    private javax.swing.ButtonGroup FMAMButtonGroup;
    private javax.swing.JRadioButton FMButton;
    private javax.swing.JLabel FrequencyLabel;
    private javax.swing.JButton HourButton;
    private javax.swing.JButton IncrementVolumeButton;
    private javax.swing.JButton MinuteButton;
    private javax.swing.JPanel RadioPanel;
    private javax.swing.JButton SnoozeButton;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JToggleButton TimeToggleButton;
    private javax.swing.JLabel VOLUME_LABEL;
    private javax.swing.JButton decrementFequencyButton;
    private javax.swing.JButton incrementFequencyButton;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton playRadioButton;
    private javax.swing.JLabel volumeLabel;
    // End of variables declaration//GEN-END:variables

    Controller controller;
    File alarmSound = new File("sounds/beep-06.WAV");
    File cameras = new File("sounds/Cameras.WAV");
    File mrSaxobeat = new File("sounds/Mr_Saxobeat.WAV");
    File dearMariaCountMeIn = new File("sounds/Dear_Maria_Count_Me_In.WAV");
    File frontierPsychiatrist = new File("sounds/Frontier_Psychiatrist.WAV");
    File goOutside = new File("sounds/Go_Outside.WAV");
    File ifIDieYoung = new File("sounds/If_I_Die_Young.WAV");
    File littleGames = new File("sounds/Little_Games.WAV");
    File titanium = new File("sounds/Titanium_feat_Sia_.WAV");
    File vivaLaVida = new File("sounds/Viva_la_Vida.WAV");
    File electricFeel = new File("sounds/Electric_Feel.WAV");
    File iAlreadyForgotEverythingYouSaid = new File("sounds/I_Already_Forgot_Everything_You_Said.WAV");    
    File mykonos = new File("sounds/Mykonos.WAV");
    File peaches = new File("sounds/Peaches.WAV");
    File pumpedUpKicks = new File("sounds/Pumped_Up_Kicks.WAV");
    File tongueTied = new File("sounds/Tongue_Tied.WAV");
    File sleepyhead = new File("sounds/Sleepyhead.WAV");
    File sweaterWeather = new File("sounds/Sweater_Weather.WAV");

    
    private void blinkTime()
    {
        this.TimeLabel.setVisible(!this.TimeLabel.isVisible());
    }
    
    private void soundAlarm()
    {
        if((this.controller.isAlarmSounding() && this.Alarm1OnOffSwitch.isSelected()))
        {
            this.play(alarmSound);
            if (!this.Alarm1OnOffSwitch.isSelected() && this.controller.isAlarmSounding())
            {
                this.controller.setAlarmSounding();
            }
        }
        
        if((this.controller.isAlarmSounding() && this.Alarm2OnOffSwitch.isSelected()))
        {
            this.play(alarmSound);
            if (!this.Alarm2OnOffSwitch.isSelected() && this.controller.isAlarmSounding())
            {
                this.controller.setAlarmSounding();
            }
        }
       
    }
    
    private void updateTimeLabel() {
        
        if(this.TimeToggleButton.isSelected()) {
            blinkTime();
            this.TimeLabel.setText(this.controller.getTime().toString());
        } else if(this.Alarm1ToggleButton.isSelected()) {
            blinkTime();
            this.TimeLabel.setText(this.controller.getAlarm1Time());
        } else if(this.Alarm2ToggleButton.isSelected()) {
            blinkTime();
            this.TimeLabel.setText(this.controller.getAlarm2Time());    
        } else {
            this.TimeLabel.setVisible(true);
            this.TimeLabel.setText(this.controller.getTime().toString());
            soundAlarm();
        }
        
    }
    
    private void updateVolumeLabel() {

        this.volumeLabel.setText(this.controller.getVolumeString());    
    }
    
    private void updateFrequencyLabel() {
        
        this.FrequencyLabel.setText(this.controller.userGetFrequencyString());
    }
    
    public void play(File sound)
    {
        try
        {
            Clip clip = AudioSystem.getClip();
            clip.open(AudioSystem.getAudioInputStream(sound));
            clip.start();
            
            Thread.sleep(clip.getMicrosecondLength()/1000);
        }
        catch (Exception exc)
        {
            exc.printStackTrace(System.out);
        }
    }


}
